swagger: "2.0"
info:
  description: |
    This document is the **REST API specification** for a TODO application service.

  version: 1.0.0
  title: TODO API Specification

# during dev, should point to your local machine
host: localhost:3000
# basePath prefixes all resource paths (e.g. /v2)
basePath: /v1

schemes:
  # tip: remove http to make production-grade
  - http
  - https
securityDefinitions:
  AUTH:
    type: apiKey
    description: A valid AUTH token.
    name: Authorization
    in: header
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json

#resource manager add, get, update, delete
paths:
  /:
    post:
      description: Add a new Todo
      operationId: addTodo
      produces:
      - application/json
      parameters:
      - in: body
        name: todo
        description: the Todo to be added
        required: true
        schema:
          $ref: "#/definitions/Todo"
      responses:
        200:
          description: Successful Todo add
      x-swagger-router-controller: swagger_controllers

  /todo/{id}:
    get:
      description: Retrieve a single todo by id
      operationId: getTodoById
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of the todo to get
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: Todo response
          schema:
            $ref: "#/definitions/Todo"
      x-swagger-router-controller: swagger_controllers

    delete:
      description: Delete a todo by Id
      operationId: deleteTodoById
      parameters:
      - name: id
        in: path
        description: id of the todo to delete
        required: true
        type: integer
        format: int64
      responses:
        204:
          description: todo deleted
      x-swagger-router-controller: swagger_controllers

    put:
      description: Update a single todo by id
      operationId: updateTodoById
      parameters:
      - name: id
        in: path
        description: Id of the todo being updated
        required: true
        type: integer
        format: int64
      - name: updated_todo
        in: body
        description: the updated todo
        required: true
        schema:
          $ref: "#/definitions/TodoUpdate"
      responses:
        201:
          description: Todo updated
        400:
          description: Yikes! An error!
      x-swagger-router-controller: swagger_controllers
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Todo:
    type: object
    properties:
      todo_id:
        type: integer
        description: Id for the todo
      todo:
        type: string
        description: The todo item
      datecreated:
        type: string
        format: date-time
        description: Timestamp when the Todo was created. Set by server
      author:
        type: string
        description: Creator or owner of the todo
      duedate:
        type: string
        format: date-time
        description: When the todo is due
      completed:
        type: boolean
        description: Indicates if the todo has been completed or not
  TodoUpdate:
    type: object
    properties:
      todo:
        type: string
        description: The todo item
      datecreated:
        type: string
        format: date-time
        description: Timestamp when the Todo was created. Set by server
      author:
        type: string
        description: Creator or owner of the todo
      duedate:
        type: string
        format: date-time
        description: When the todo is due
      completed:
        type: boolean
        description: Indicates if the todo has been completed or not
  ErrorResponse:
      required:
        - message
      properties:
        message:
          type: string